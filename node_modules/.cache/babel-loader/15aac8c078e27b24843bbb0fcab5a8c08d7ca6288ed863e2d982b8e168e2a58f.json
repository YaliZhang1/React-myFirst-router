{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hy React\\\\self-studying-react\\\\Todo-List\\\\React-todo-list\\\\src\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    //状态在哪里，操作状态的方法就在哪里\n    // initialize the state of the component\n    this.state = {\n      todos: [{\n        id: \"1\",\n        name: \"Buy groceries\",\n        done: true\n      }, {\n        id: \"2\",\n        name: \"Clean the house\",\n        done: false\n      }, {\n        id: \"3\",\n        name: \"Do laundry\",\n        done: false\n      }, {\n        id: \"4\",\n        name: \"Shopping\",\n        done: true\n      }\n      // Add more todos here\n      ]\n    };\n    // addTodo for add one todo item, the parameter is todoObj\n    this.addTodo = todoObj => {\n      const {\n        todos\n      } = this.state; //get the old todos\n      const newTodos = [todoObj, ...todos]; //add one todo\n      //update status\n      this.setState({\n        todos: newTodos\n      });\n    };\n    // updateTodo for update one todo Object\n    this.updateTodo = (id, done) => {\n      const {\n        todos\n      } = this.state; //get old todos\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id)\n          //if id are the same, update the status of done to the new done status\n          return {\n            ...todoObj,\n            //copy the old date\n            done //only update the status of done to the new done status, here is done == done, but we can omit the second parameter done here.\n          };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      }); //update the status\n    };\n    // deleteTodo for delete one todo item, the parameter is id\n    this.deleteTodo = (id, name) => {\n      const {\n        todos\n      } = this.state; //get old todos\n      const newTodos = todos.filter(todoObj => todoObj.id !== id); //delete one todo\n\n      this.setState({\n        todos: newTodos\n      }); //update the status\n    };\n    // checkAllTodo for check all\n    this.checkAllTodo = () => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.map(todoObj => {\n        return {\n          ...todoObj,\n          done: true\n        };\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos // App给List传了一个数组todos\n          ,\n          updateTodo: this.updateTodo //App给List传了一个函数updateTodo\n          ,\n          deleteTodo: this.deleteTodo //App给List传了一个函数deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          todos: todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Header","List","Footer","jsxDEV","_jsxDEV","App","constructor","args","state","todos","id","name","done","addTodo","todoObj","newTodos","setState","updateTodo","map","deleteTodo","filter","checkAllTodo","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Hy React/self-studying-react/Todo-List/React-todo-list/src/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  //状态在哪里，操作状态的方法就在哪里\n  // initialize the state of the component\n  state = {\n    todos: [\n      { id: \"1\", name: \"Buy groceries\", done: true },\n      { id: \"2\", name: \"Clean the house\", done: false },\n      { id: \"3\", name: \"Do laundry\", done: false },\n      { id: \"4\", name: \"Shopping\", done: true },\n      // Add more todos here\n    ],\n  };\n  // addTodo for add one todo item, the parameter is todoObj\n  addTodo = (todoObj) => {\n    const { todos } = this.state; //get the old todos\n    const newTodos = [todoObj, ...todos]; //add one todo\n    //update status\n    this.setState({\n      todos: newTodos,\n    });\n  };\n\n  // updateTodo for update one todo Object\n  updateTodo = (id, done) => {\n    const { todos } = this.state; //get old todos\n    const newTodos = todos.map((todoObj) => {\n      if (todoObj.id === id)\n        //if id are the same, update the status of done to the new done status\n        return {\n          ...todoObj, //copy the old date\n          done, //only update the status of done to the new done status, here is done == done, but we can omit the second parameter done here.\n        };\n      else return todoObj;\n    });\n    this.setState({ todos: newTodos }); //update the status\n  };\n  // deleteTodo for delete one todo item, the parameter is id\n  deleteTodo = (id, name) => {\n    const { todos } = this.state; //get old todos\n    const newTodos = todos.filter((todoObj) => todoObj.id !== id); //delete one todo\n\n    this.setState({ todos: newTodos }); //update the status\n  };\n  // checkAllTodo for check all\n  checkAllTodo = () => {\n    const { todos } = this.state;\n    const newTodos = todos.map((todoObj) => {\n      return { ...todoObj, done: true };\n    });\n    this.setState({ todos: newTodos });\n  };\n  render() {\n    const { todos } = this.state;\n    return (\n      <div className=\"todo-container\">\n        <div className=\"todo-wrap\">\n          {/* App有三个孩子，下面是它分别给它的三个孩子传数组或者函数，让孩子们可以在自己的组件里面使用 */}\n          <Header addTodo={this.addTodo} />\n          <List\n            todos={todos} // App给List传了一个数组todos\n            updateTodo={this.updateTodo} //App给List传了一个函数updateTodo\n            deleteTodo={this.deleteTodo} //App给List传了一个函数deleteTodo\n          />\n          <Footer todos={todos} />\n          {/* Add your todo components here */}\n          {/* <Todo /> */}\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}