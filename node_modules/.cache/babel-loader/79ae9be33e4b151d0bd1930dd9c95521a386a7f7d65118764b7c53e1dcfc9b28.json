{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hy React\\\\self-studying-react\\\\Todo-List\\\\React-todo-list\\\\src\\\\components\\\\List\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"../Item\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class List extends Component {\n  render() {\n    // destructuring props to make them easier to use.从父亲那里接过来的数组todos，函数 updateTodo, deleteTodo可以直接通过解构赋值出来之后使用。\n    //这里使用this.props来完成父亲传孩子的过程\n    const {\n      todos,\n      updateTodo,\n      deleteTodo\n    } = this.props; //todos是自己用。updateTodo,deleteTodo是继续往下传，自己在这里不用。\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-main\",\n      children: todos.map(todo => {\n        //todos自己用。\n        return /*#__PURE__*/_jsxDEV(Item, {\n          ...todo,\n          updateTodo: updateTodo //updateTodo,deleteTodo继续往下传，所以按照同样的方法传递给List的儿子Item。\n          ,\n          deleteTodo: deleteTodo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}\n//对接收的props进行：类型以及必要性的限制（需要通过 npm add prop-types安装先）\nList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  //需要传入一个函数，当任务状态发生变化时，该函数将被调用\n  deleteTodo: PropTypes.func.isRequired //需要传入一个函数，当任务被删除时，该函数将被调用\n};","map":{"version":3,"names":["React","Component","PropTypes","Item","jsxDEV","_jsxDEV","List","render","todos","updateTodo","deleteTodo","props","className","children","map","todo","id","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","array","isRequired","func"],"sources":["D:/Hy React/self-studying-react/Todo-List/React-todo-list/src/components/List/index.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Item from \"../Item\";\r\nimport \"./index.css\";\r\n\r\nexport default class List extends Component {\r\n  //对接收的props进行：类型以及必要性的限制（需要通过 npm add prop-types安装先）\r\n  static propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    updateTodo: PropTypes.func.isRequired, //需要传入一个函数，当任务状态发生变化时，该函数将被调用\r\n    deleteTodo: PropTypes.func.isRequired, //需要传入一个函数，当任务被删除时，该函数将被调用\r\n  };\r\n  render() {\r\n    // destructuring props to make them easier to use.从父亲那里接过来的数组todos，函数 updateTodo, deleteTodo可以直接通过解构赋值出来之后使用。\r\n    //这里使用this.props来完成父亲传孩子的过程\r\n    const { todos, updateTodo, deleteTodo } = this.props; //todos是自己用。updateTodo,deleteTodo是继续往下传，自己在这里不用。\r\n    return (\r\n      <ul className=\"todo-main\">\r\n        {todos.map((todo) => {\r\n          //todos自己用。\r\n          return (\r\n            <Item\r\n              key={todo.id}\r\n              {...todo}\r\n              updateTodo={updateTodo} //updateTodo,deleteTodo继续往下传，所以按照同样的方法传递给List的儿子Item。\r\n              deleteTodo={deleteTodo}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,MAAMC,IAAI,SAASL,SAAS,CAAC;EAO1CM,MAAMA,CAAA,EAAG;IACP;IACA;IACA,MAAM;MAAEC,KAAK;MAAEC,UAAU;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;IACtD,oBACEN,OAAA;MAAIO,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBL,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAK;QACnB;QACA,oBACEV,OAAA,CAACF,IAAI;UAAA,GAECY,IAAI;UACRN,UAAU,EAAEA,UAAW,CAAC;UAAA;UACxBC,UAAU,EAAEA;QAAW,GAHlBK,IAAI,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAET;AACF;AA1BE;AADmBd,IAAI,CAEhBe,SAAS,GAAG;EACjBb,KAAK,EAAEN,SAAS,CAACoB,KAAK,CAACC,UAAU;EACjCd,UAAU,EAAEP,SAAS,CAACsB,IAAI,CAACD,UAAU;EAAE;EACvCb,UAAU,EAAER,SAAS,CAACsB,IAAI,CAACD,UAAU,CAAE;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}